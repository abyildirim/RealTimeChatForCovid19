{"version":3,"sources":["webpack:///src/app/sign-in-component/sign-in.component.ts","webpack:///src/app/sign-in-component/sign-in.component.html","webpack:///src/app/services/chat-room.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/home-page/home-page.component.ts","webpack:///src/app/home-page/home-page.component.html","webpack:///src/app/doctor-selection/doctor-selection.component.ts","webpack:///src/app/doctor-selection/doctor-selection.component.html","webpack:///src/app/sign-up-component/sign-up.component.ts","webpack:///src/app/sign-up-component/sign-up.component.html","webpack:///src/app/sign-up-component/dialog-for-wrong-form.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat-room-components/chat-room-components.component.ts","webpack:///src/app/chat-room-components/chat-room-components.component.html","webpack:///src/app/services/covid.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/doctor-registration/doctor-registration.component.ts","webpack:///src/app/doctor-registration/doctor-registration.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SignInComponent","fb","service","signInForm","group","name","required","surname","email","subscription","onChange","_","simpleChanges","touched","currentValue","markAllAsTouched","add","valueChanges","subscribe","value","invalid","doctorValidationForSignIn","getRawValue","result","checkSignInResponse","error","console","log","saveForm","selector","templateUrl","styleUrls","ChatRoomService","SOCKET_ENDPOINT","data","socket","emit","observable","observer","on","next","disconnect","environment","production","HomePageComponent","router","navigate","routePatient","routeDoctor","DoctorSelectionComponent","doctorRoomService","getAllDoctorRooms","allRooms","getUserID","userID","user","room","queryParams","userId","roomID","DoctorRoomType","SignUpComponent","dialog","submitted","genders","doctorOrPatient","doctorArea","personalform","age","phonenumber","birthdate","gender","onTouch","saveDoctorToSystem","get","open","DialogElementsExampleDialogComponent","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","ChatRoomComponentsComponent","roomService","route","connectedServer","messageArray","doctorOrNot","doctorEmail","snapshot","queryParamMap","checkRoomActiveOrNot","checkResult","forNewUserJoinToChatRoom","push","leftChatRoomByUserActions","takenNewMessageFromOtherUsers","join","joinChatRoom","username","leaveRoom","messageText","sendMessageToAllUsers","message","DoctorRoomService","http","baseURL","endpoint","endpointForUserID","endpointForSaveDoctor","endpointForDoctorValidationForSignIn","endpointForCheckRoomIsActive","headers","body","JSON","stringify","post","providedIn","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","exports","DoctorRegistrationComponent","singIn","singUp","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sign-in-component',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit, OnChanges {\r\n  signInForm = this.fb.group({\r\n    name: ['', Validators.required],\r\n    surname: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n  });\r\n\r\n  private subscription = new Subscription();\r\n\r\n  onChange: any = (_: SignInForm) => {\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private service: DoctorRoomService) {\r\n  }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges): void {\r\n    if (simpleChanges.touched && simpleChanges.touched.currentValue) {\r\n      this.signInForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.signInForm.valueChanges.subscribe((value: SignInForm) => {\r\n        this.onChange(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  saveForm() {\r\n    if (this.signInForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.service.doctorValidationForSignIn(this.signInForm.getRawValue()).subscribe(\r\n      (result) => this.checkSignInResponse(result),\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkSignInResponse(value) {\r\n    console.log(value);\r\n  };\r\n}\r\n\r\nexport interface SignInForm {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n}\r\n","<form [formGroup]=\"signInForm\" (ngSubmit)=\"saveForm()\" appearance=\"standard\">\r\n  <mat-form-field>\r\n    <div class=\"\">\r\n      <mat-label>\r\n        FirstName:\r\n        <label>\r\n          <input matInput type=\"text\" formControlName=\"name\"/>\r\n        </label>\r\n      </mat-label>\r\n    </div>\r\n  </mat-form-field>\r\n  <br>\r\n  <mat-form-field>\r\n    <div class=\"\">\r\n      <mat-label>\r\n        LastName:\r\n        <input matInput type=\"text\" formControlName=\"surname\">\r\n      </mat-label>\r\n    </div>\r\n  </mat-form-field>\r\n  <br>\r\n  <mat-form-field>\r\n    <div class=\"\">\r\n      <mat-label>\r\n        Email:\r\n        <input matInput type=\"text\" formControlName=\"email\">\r\n      </mat-label>\r\n    </div>\r\n  </mat-form-field>\r\n\r\n  <mat-card-actions>\r\n    <button mat-raised-button type=\"submit\">Submit</button>\r\n  </mat-card-actions>\r\n</form>\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {io} from 'socket.io-client';\r\n\r\n@Injectable()\r\nexport class ChatRoomService {\r\n  private SOCKET_ENDPOINT = 'http://localhost:5000';\r\n  private socket; // io('http://localhost:3000/rooms');\r\n\r\n  private userID: string;\r\n  private roomId: string;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  joinChatRoom(data) {\r\n    this.socket.emit('join', data);\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  forNewUserJoinToChatRoom() {\r\n    this.socket = io(this.SOCKET_ENDPOINT);\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date}>(observer => {\r\n      this.socket.on('new user joined', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n\r\n    return observable;\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  leftChatRoomByUserActions() {\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date }>(observer => {\r\n      this.socket.on('left room', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n    return observable;\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  sendMessageToAllUsers(data) {\r\n    this.socket.emit('message', data);\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  takenNewMessageFromOtherUsers() {\r\n    // tslint:disable-next-line:ban-types\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date}>(observer => {\r\n      this.socket.on('message', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n\r\n    return observable;\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  leaveRoom(data) {\r\n    this.socket.emit('leave', data);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  routeDoctor(): void {\r\n    this.router.navigate(['doctor/registration']);\r\n  }\r\n  routePatient(): void {\r\n    this.router.navigate(['patient/doctor-selection']);\r\n  }\r\n\r\n}\r\n","<div class=\"desktopSettings\">\r\n  <img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n  <div class=\"container-div\">\r\n    <div class=\"banner-div\" fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n        <img class = \"banner\" src=\"assets/img/home-banner.png\">\r\n    </div>\r\n\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-around center\" >\r\n      <div fxLayoutGap=\"50px\">\r\n        <button class=\"selection-button button-radius-left\" (click)=\"routePatient()\">Patient</button>\r\n        <button class=\"selection-button button-radius-right\" (click)=\"routeDoctor()\">Doctor</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ChatRoomService} from '../services/chat-room.service';\r\nimport {Router} from '@angular/router';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-selection',\r\n  templateUrl: './doctor-selection.component.html',\r\n  styleUrls: ['./doctor-selection.component.css']\r\n})\r\nexport class DoctorSelectionComponent implements OnInit {\r\n  userID: any;\r\n  allRooms: any;\r\n\r\n  constructor(private router: Router, private doctorRoomService: DoctorRoomService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.doctorRoomService.getAllDoctorRooms().subscribe(\r\n      (result) => this.allRooms = result,\r\n      (error) => this.router.navigate(['home'])\r\n    );\r\n    this.doctorRoomService.getUserID().subscribe(\r\n      (result) => this.userID = result,\r\n      (error => this.router.navigate(['home']))\r\n    );\r\n  }\r\n\r\n  gotoChatRoom(user: string, room: string): void {\r\n    this.router.navigate(['/chatroom'], {queryParams: {email: '-', userId: this.userID, roomID: room}});\r\n  }\r\n}\r\n\r\nclass DoctorRoomType {\r\n  user: string;\r\n  room: string;\r\n}\r\n","<p>doctor-selection works!</p>\r\n<div class=\"row\">\r\n  <div class=\"well\" style=\"height:200px; padding:15px;\">\r\n    Selam:\r\n    <div *ngFor=\"let item of allRooms\">\r\n      <button (click)=\"gotoChatRoom(item.doctorname, item.room)\">{{item.doctorname}}  {{item.room}} {{item.doctorarea}}\r\n      </button>\r\n      <br>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {HttpResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\n\r\n@Component({\r\n  selector: 'app-well-come-page',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit, OnChanges {\r\n\r\n  submitted = false;\r\n\r\n  genders: any = [{name: 'male', value: 0}, {name: 'female', value: 1}];\r\n  doctorOrPatient: any = [{name: 'doctor', value: 0}, {name: 'hasta', value: 1}];\r\n  doctorArea: any = [{name: 'dahiliye', value: 'dahiliye'}];\r\n  personalform = this.fb.group({\r\n    name: ['', Validators.required],\r\n    surname: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n    age: ['', Validators.required],\r\n    phonenumber: ['', Validators.required],\r\n    birthdate: ['', Validators.required],\r\n    gender: ['', Validators.required],\r\n    doctorArea: ['', Validators.required],\r\n  });\r\n\r\n  private subscription = new Subscription();\r\n\r\n  onChange: any = (_: PersonalInfoForm) => {\r\n  }\r\n  onTouch: any = () => {\r\n  }\r\n\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, public dialog: MatDialog, private service: DoctorRoomService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.personalform.valueChanges.subscribe((value: PersonalInfoForm) => {\r\n        this.onChange(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges): void {\r\n    if (simpleChanges.touched && simpleChanges.touched.currentValue) {\r\n      this.personalform.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  saveForm(): void {\r\n    console.log('submitted');\r\n    if (this.personalform.invalid) {\r\n      return;\r\n    }\r\n    // TODO: save before summit to server js\r\n    /*this.service.saveFormToDataBase(this.personalform.value).subscribe(\r\n      (result: HttpResponse<any>) => this.router.navigate(['/doctororstudent']),\r\n      error => this.openDialog()\r\n    );*/\r\n\r\n    this.service.saveDoctorToSystem(this.personalform.getRawValue()).subscribe(\r\n      (result) => this.router.navigate(['/chatroom'], {\r\n        queryParams: {\r\n          email: this.personalform.get('email'),\r\n          userId: this.personalform.get('name').value + ' ' + this.personalform.get('surname').value,\r\n          roomID: result\r\n        }\r\n      }),\r\n      (error) => console.log(error)\r\n    );\r\n\r\n    /*if (this.personalform.get('doctorOrPatient').value === 0) {\r\n      this.router.navigate(['/doctor']);\r\n    } else if (this.personalform.get('doctorOrPatient').value === 1) {\r\n      this.router.navigate(['/hasta']);\r\n    }*/\r\n  }\r\n\r\n  openDialog(): void {\r\n    this.dialog.open(DialogElementsExampleDialogComponent);\r\n  }\r\n\r\n  formDisabled(): boolean {\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport interface PersonalInfoForm {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  age: string;\r\n  phonenumber: string;\r\n  birthdate: string;\r\n  gender: string;\r\n  doctorArea: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-for-wrong-form',\r\n  templateUrl: './dialog-for-wrong-form.html',\r\n})\r\nexport class DialogElementsExampleDialogComponent {\r\n}\r\n","<div class=\"desktopSettings\">\r\n  <div class=\"topPart\" fxLayout=\"row\" fxLayoutAlign=\"center\">\r\n    <div>\r\n      <mat-card class=\"card-container\">Covid 19 Home Page Name</mat-card>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"middleSection\">\r\n    <div class=\"content\">\r\n      <form [formGroup]=\"personalform\" (ngSubmit)=\"saveForm()\" appearance=\"standard\">\r\n        <mat-form-field>\r\n          <div class=\"\">\r\n\r\n            <mat-label>\r\n              FirstName:\r\n              <label>\r\n                <input matInput type=\"text\" formControlName=\"name\"/>\r\n              </label>\r\n            </mat-label>\r\n          </div>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n          <div class=\"\">\r\n            <mat-label>\r\n              LastName:\r\n              <input matInput type=\"text\" formControlName=\"surname\">\r\n            </mat-label>\r\n          </div>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n          <div class=\"\">\r\n            <mat-label>\r\n              Email:\r\n              <input matInput type=\"text\" formControlName=\"email\">\r\n            </mat-label>\r\n          </div>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n          <div class=\"\">\r\n            <mat-label>\r\n              Age:\r\n              <input matInput type=\"text\" formControlName=\"age\">\r\n            </mat-label>\r\n          </div>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field>\r\n          <div class=\"\">\r\n            <mat-label>\r\n              Phonenumber:\r\n              <input matInput type=\"text\" formControlName=\"phonenumber\">\r\n            </mat-label>\r\n          </div>\r\n        </mat-form-field>\r\n        <br>\r\n        <div>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Gender</mat-label>\r\n            <mat-select matInput formControlName=\"gender\">\r\n              <mat-option *ngFor=\"let gender of genders\" [value]=\"gender.value\">\r\n                {{gender.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <br>\r\n        <div>\r\n          <mat-form-field appearance=\"fill\">\r\n            <mat-label>Area of Doctor</mat-label>\r\n            <mat-select matInput formControlName=\"doctorArea\">\r\n              <mat-option *ngFor=\"let dp of doctorArea\" [value]=\"dp.value\">\r\n                {{dp.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <br>\r\n        <mat-form-field>\r\n          <div class=\"\">\r\n            <mat-label> Birthdate\r\n              <input matInput type=\"date\" formControlName=\"birthdate\" placeholder=\"Pick a date\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"birthdate\"></mat-datepicker-toggle>\r\n              <mat-datepicker #birthdate></mat-datepicker>\r\n            </mat-label>\r\n          </div>\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-card-actions>\r\n          <button mat-raised-button type=\"submit\" [disabled]=\"formDisabled()\">Submit</button>\r\n        </mat-card-actions>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"middleSection2\">\r\n    <div fxLayoutAlign=\"center\">\r\n      <button mat-button style=\"color: black; background: #f8f9fa\">\r\n        Are you hasta!!?\r\n      </button>\r\n      <button mat-button style=\"color: black; background: #f8f9fa\">If you are ready start\r\n        Are you Doctor?\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<h1 mat-dialog-title>Wrong Form</h1>\r\n<div mat-dialog-content>Please reenter form</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Close</button>\r\n</div>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19-information-and-question-system';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<router-outlet></router-outlet>\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {DialogElementsExampleDialogComponent, SignUpComponent} from './sign-up-component/sign-up.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { DoctorSelectionComponent } from './doctor-selection/doctor-selection.component';\r\nimport { DoctorRegistrationComponent } from './doctor-registration/doctor-registration.component';\r\nimport {ChatRoomComponentsComponent} from './chat-room-components/chat-room-components.component';\r\nimport { SignInComponent } from './sign-in-component/sign-in.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignUpComponent,\r\n    DialogElementsExampleDialogComponent,\r\n    HomePageComponent,\r\n    DoctorSelectionComponent,\r\n    DoctorRegistrationComponent,\r\n    HomePageComponent,\r\n    ChatRoomComponentsComponent,\r\n    SignInComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatButtonToggleModule,\r\n    MatSelectModule,\r\n    MatGridListModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ChatRoomService} from '../services/chat-room.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-room-components',\r\n  templateUrl: './chat-room-components.component.html',\r\n  styleUrls: ['./chat-room-components.component.css'],\r\n  providers: [ChatRoomService]\r\n})\r\nexport class ChatRoomComponentsComponent {\r\n  connectedServer = false;\r\n  user: string;\r\n  room: string;\r\n  messageText: string;\r\n  messageArray: Array<{ username: string, text: string, createdAt: Date }> = [];\r\n  doctorEmail: string;\r\n  doctorOrNot = false;\r\n\r\n  constructor(private roomService: ChatRoomService, private route: ActivatedRoute,\r\n              private service: DoctorRoomService, private router: Router) {\r\n    this.doctorEmail = this.route.snapshot.queryParamMap.get('email');\r\n    this.user = this.route.snapshot.queryParamMap.get('userId');\r\n    this.room = this.route.snapshot.queryParamMap.get('roomID');\r\n    if (this.doctorEmail !== '-') {\r\n      this.doctorOrNot = true;\r\n    }\r\n    this.service.checkRoomActiveOrNot(this.room).subscribe(\r\n      (result) => {\r\n        this.checkResult(result);\r\n      },\r\n      (error) => this.router.navigate(['patient/doctor-selection'])\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkResult(result) {\r\n    if (result === 'true') {\r\n      this.connectedServer = true;\r\n      this.roomService.forNewUserJoinToChatRoom()\r\n        .subscribe(data => this.messageArray.push(data));\r\n\r\n      this.roomService.leftChatRoomByUserActions()\r\n        .subscribe(data => this.messageArray.push(data));\r\n\r\n      this.roomService.takenNewMessageFromOtherUsers()\r\n        .subscribe(data => this.messageArray.push(data));\r\n\r\n      this.join();\r\n    } else {\r\n      this.router.navigate(['patient/doctor-selection']);\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  join() {\r\n    this.roomService.joinChatRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  leave() {\r\n    this.roomService.leaveRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  sendMessage() {\r\n    console.log(this.messageText);\r\n    this.roomService.sendMessageToAllUsers({\r\n      username: this.user,\r\n      room: this.room,\r\n      email: this.doctorEmail,\r\n      message: this.messageText\r\n    });\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"connectedServer\" class=\"container-fluid\">\r\n  <div class=\"row\">\r\n    <h2>Realtime Chat Application for Covid19</h2>\r\n    <hr>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col sm-2\">\r\n      <div style=\"margin-top:19px;\" class=\"pull-right\">\r\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"leave()\">Leave</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"well\" style=\"height:200px; padding:15px;\">\r\n      <div *ngFor=\"let item of messageArray\">\r\n        <span><strong>{{item.username}} : </strong> {{item.text}}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"messageText\">\r\n    </div>\r\n    <div class=\"col-sm-2\">\r\n      <button type=\"button\" class=\"btn btn-success pull-right\" (click)=\"sendMessage()\">Send Message</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"!connectedServer\"> Component wiew for hasta Page</div>\r\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorRoomService {\r\n  private baseURL = 'http://localhost:5000/api/';\r\n  private endpoint = this.baseURL + 'doctorRoomList';\r\n  private endpointForUserID = this.baseURL + 'userIDForRandom';\r\n  private endpointForSaveDoctor = this.baseURL + 'saveDoctor';\r\n  private endpointForDoctorValidationForSignIn = this.baseURL + 'doctorValidationForSignIn';\r\n  private endpointForCheckRoomIsActive = this.baseURL + 'checkRoomIsActive';\r\n  private headers = new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  saveFormToDataBase(value: string) {\r\n    const body = JSON.stringify(value);\r\n    return this.http.post(this.endpoint, body, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getAllDoctorRooms() {\r\n    return this.http.get(this.endpoint, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getUserID() {\r\n    return this.http.get(this.endpointForUserID, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  saveDoctorToSystem(value) {\r\n    const body = JSON.stringify({data: JSON.stringify(value)});\r\n    return this.http.post(this.endpointForSaveDoctor, body, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  doctorValidationForSignIn(value) {\r\n    const body = JSON.stringify({data: JSON.stringify(value)});\r\n    return this.http.post(this.endpointForDoctorValidationForSignIn, body, {headers: this.headers});\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkRoomActiveOrNot(value) {\r\n    const body = JSON.stringify({data: value});\r\n    return this.http.post(this.endpointForCheckRoomIsActive, body, {headers: this.headers});\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {SignUpComponent} from './sign-up-component/sign-up.component';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport { DoctorSelectionComponent } from './doctor-selection/doctor-selection.component';\r\nimport { DoctorRegistrationComponent } from './doctor-registration/doctor-registration.component';\r\nimport {ChatRoomComponentsComponent} from './chat-room-components/chat-room-components.component';\r\nimport {SignInComponent} from './sign-in-component/sign-in.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'home', component: HomePageComponent},\r\n  {path: 'doctor/registration', component: DoctorRegistrationComponent},\r\n  {path: 'patient/doctor-selection', component: DoctorSelectionComponent},\r\n  {path: 'chatroom', component: ChatRoomComponentsComponent},\r\n  {path: 'doctor/registration/sign-in', component: SignInComponent},\r\n  {path: 'doctor/registration/sing-up', component: SignUpComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-doctor-registration',\r\n  templateUrl: './doctor-registration.component.html',\r\n  styleUrls: ['./doctor-registration.component.css']\r\n})\r\nexport class DoctorRegistrationComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  singIn(): void {\r\n    this.router.navigate(['doctor/registration/sign-in']);\r\n  }\r\n\r\n  singUp(): void {\r\n    this.router.navigate(['doctor/registration/sing-up']);\r\n  }\r\n}\r\n","<p>doctor-registration works!</p>\r\n<div>\r\n  <button (click)=\"singIn()\">Sing in</button>\r\n  <button (click)=\"singUp()\">Sing up</button>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}