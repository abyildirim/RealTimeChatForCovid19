{"version":3,"sources":["webpack:///src/app/sign-in-component/sign-in.component.html","webpack:///src/app/sign-in-component/sign-in.component.ts","webpack:///src/app/services/chat-room.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/home-page/home-page.component.ts","webpack:///src/app/home-page/home-page.component.html","webpack:///src/app/doctor-selection/doctor-selection.component.ts","webpack:///src/app/doctor-selection/doctor-selection.component.html","webpack:///src/app/sign-up-component/sign-up.component.html","webpack:///src/app/sign-up-component/sign-up.component.ts","webpack:///src/app/sign-up-component/dialog-for-wrong-form.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chat-room-components/chat-room-components.component.ts","webpack:///src/app/chat-room-components/chat-room-components.component.html","webpack:///src/app/services/covid.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/doctor-registration/doctor-registration.component.ts","webpack:///src/app/doctor-registration/doctor-registration.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["SignInComponent","fb","service","router","alertConfig","signInForm","group","password","required","email","alert_flag","subscription","onChange","_","type","simpleChanges","touched","currentValue","markAllAsTouched","add","valueChanges","subscribe","value","invalid","show_alert","doctorValidationForSignIn","getRawValue","result","checkSignInResponse","error","console","log","delay","ms","Promise","resolve","setTimeout","navigate","queryParams","userId","roomID","saveForm","selector","templateUrl","styleUrls","ChatRoomService","SOCKET_ENDPOINT","Socket_PORT_ForLOCAL","data","socket","emit","observable","observer","on","next","disconnect","environment","production","HomePageComponent","routePatient","routeDoctor","DoctorSelectionComponent","doctorRoomService","audio","Audio","load","play","getAllDoctorRooms","allRooms","getUserID","userID","user","room","pause","DoctorRoomType","SignUpComponent","dialog","alert_message","submitted","genders","name","doctorOrPatient","doctorArea","personalform","surname","age","phonenumber","birthdate","gender","onTouch","saveDoctorToSystem","check_doctor_save_status","open","DialogElementsExampleDialogComponent","AppComponent","title","routeHomePage","AppModule","declarations","imports","providers","bootstrap","ChatRoomComponentsComponent","roomService","route","connectedServer","messageArray","doctorOrNot","messageText","doctorEmail","snapshot","queryParamMap","get","checkRoomActiveOrNot","checkResult","socketConnect","doctorLeftRoom","checkDoctorIsLeft","takenNewMessageFromOtherUsers","push","join","joinChatRoom","username","leaveRoom","gotoHome","sendMessageToAllUsers","message","text","DoctorRoomService","http","baseURL2","baseURL","endpoint","endpointForUserID","endpointForSaveDoctor","endpointForDoctorValidationForSignIn","endpointForCheckRoomIsActive","headers","body","JSON","stringify","post","providedIn","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","exports","DoctorRegistrationComponent","singIn","singUp","bootstrapModule","err","webpackEmptyAsyncContext","req","then","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["<img class=\"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  \r\n  <p *ngIf=\"alert_flag\">\r\n    <ngb-alert>\r\n      Email or password is invalid!\r\n    </ngb-alert>\r\n  </p>\r\n\r\n\r\n  <p class=\"header\">Sign-In</p>\r\n  <div class=\"row justify-content-md-center general-container\">\r\n    <div class=\"col-md-6 form-div \">\r\n      <form [formGroup]=\"signInForm\" (ngSubmit)=\"saveForm()\" appearance=\"standard\">\r\n        <div class=\"row justify-content-md-center\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Email:\r\n            </div>\r\n            <input class=\"form-input\" type=\"email\" formControlName=\"email\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Password:\r\n            </div>\r\n            <input class=\"form-input\" type=\"password\" formControlName=\"password\"/>\r\n          </div>\r\n        </div>\r\n        <br>\r\n        <button class=\"btn sign-button\" mat-raised-button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport { NgbAlertConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport {Subscription} from 'rxjs';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sign-in-component',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit, OnChanges {\r\n  signInForm = this.fb.group({\r\n    password: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n  });\r\n\r\n  alert_flag: Boolean = false;\r\n\r\n  private subscription = new Subscription();\r\n\r\n\r\n  onChange: any = (_: SignInForm) => {\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private service: DoctorRoomService, private router: Router, alertConfig: NgbAlertConfig) {\r\n    alertConfig.type = 'danger';\r\n  }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges): void {\r\n    if (simpleChanges.touched && simpleChanges.touched.currentValue) {\r\n      this.signInForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.signInForm.valueChanges.subscribe((value: SignInForm) => {\r\n        this.onChange(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  async saveForm() {\r\n    if (this.signInForm.invalid) {\r\n      this.show_alert();\r\n      return;\r\n    }\r\n\r\n    this.service.doctorValidationForSignIn(this.signInForm.getRawValue()).subscribe(\r\n      (result) => this.checkSignInResponse(result),\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  async show_alert(){\r\n    this.alert_flag = true;\r\n    await this.delay(5000);\r\n    this.alert_flag = false;\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkSignInResponse(value) {\r\n    if (value !== 'NotFound') {\r\n      this.router.navigate(['/chatroom'], {\r\n        queryParams: {\r\n          email: this.signInForm.getRawValue().email,\r\n          userId: '-',\r\n          roomID: value\r\n        }\r\n      });\r\n    }\r\n    this.show_alert();\r\n    console.log(value);\r\n  };\r\n}\r\n\r\nexport interface SignInForm {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {io} from 'socket.io-client';\r\n\r\n@Injectable()\r\nexport class ChatRoomService {\r\n  private SOCKET_ENDPOINT = 'https://cs447covidchatservice.herokuapp.com/';\r\n  private Socket_PORT_ForLOCAL = 'http://localhost:5000';\r\n  private socket; // io('http://localhost:3000/rooms');\r\n\r\n  private userID: string;\r\n  private roomId: string;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  joinChatRoom(data) {\r\n    this.socket.emit('join', data);\r\n  }\r\n\r\n  socketConnect() {\r\n    this.socket = io(this.Socket_PORT_ForLOCAL);\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  /*forNewUserJoinToChatRoom() {\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date }>(observer => {\r\n      this.socket.on('new user joined', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n\r\n    return observable;\r\n  }*/\r\n\r\n  // tslint:disable-next-line:typedef\r\n  doctorLeftRoom() {\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date }>(observer => {\r\n      this.socket.on('doctor left room', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n    return observable;\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  sendMessageToAllUsers(data) {\r\n    this.socket.emit('message', data);\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  takenNewMessageFromOtherUsers() {\r\n    // tslint:disable-next-line:ban-types\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date }>(observer => {\r\n      this.socket.on('message', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n\r\n    return observable;\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  leaveRoom(data) {\r\n    if (this.socket) {\r\n      // this.socket.emit('leave', data);\r\n      this.socket.disconnect();\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  routeDoctor(): void {\r\n    this.router.navigate(['doctor/registration']);\r\n  }\r\n\r\n  routePatient(): void {\r\n    this.router.navigate(['patient/doctor-selection']);\r\n  }\r\n\r\n\r\n}\r\n","<img class=\"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  <div class=\"row justify-content-md-center general-container\">\r\n    <div class=\"col-md-12\">\r\n      <img class=\"banner\" src=\"assets/img/home-banner.png\">\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <button class=\"btn selection-button button-radius-left\" (click)=\"routePatient()\">Patient</button>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <button class=\"btn selection-button button-radius-right\" (click)=\"routeDoctor()\">Doctor</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport {ChatRoomService} from '../services/chat-room.service';\r\nimport {Router} from '@angular/router';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-selection',\r\n  templateUrl: './doctor-selection.component.html',\r\n  styleUrls: ['./doctor-selection.component.css']\r\n})\r\nexport class DoctorSelectionComponent implements OnInit, OnDestroy {\r\n  userID: any;\r\n  allRooms: any;\r\n  audio;\r\n\r\n  constructor(private router: Router, private doctorRoomService: DoctorRoomService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.audio = new Audio('../../assets/audio/information.mp3');\r\n    this.audio.load();\r\n    this.audio.play();\r\n\r\n    this.doctorRoomService.getAllDoctorRooms().subscribe(\r\n      (result) => {\r\n        this.allRooms = result;\r\n        /*this.allRooms.forEach(doctor=> {\r\n          this.doctorRoomService.checkRoomActiveOrNot(doctor.room).subscribe(\r\n            (result) => {\r\n              if (result === 'true') {\r\n                doctor.isActive = true;\r\n              }\r\n              else{\r\n                doctor.isActive = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              doctor.isActive = false;\r\n            }\r\n          );\r\n       });*/\r\n      },\r\n      (error) => this.router.navigate(['home'])\r\n    );\r\n    this.doctorRoomService.getUserID().subscribe(\r\n      (result) => this.userID = result,\r\n      (error => this.router.navigate(['home']))\r\n    );\r\n  }\r\n\r\n  gotoChatRoom(user: string, room: string): void {\r\n    this.router.navigate(['/chatroom'], {queryParams: {email: '-', userId: this.userID, roomID: room}});\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.audio.pause();\r\n  }\r\n}\r\n\r\nclass DoctorRoomType {\r\n  user: string;\r\n  room: string;\r\n}\r\n","<img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  <p class=\"header\">Doctor Selection</p>\r\n  <div class=\"row justify-content-md-center doctor-container\">\r\n      <div class=\"col-md-6 doctor-div \" *ngFor=\"let item of allRooms\">\r\n        <button class = \"btn btn-primary doctor-button\" [disabled]=\"!item.isActive\" (click)=\"gotoChatRoom(item.doctorname, item.room)\">\r\n          <img class = \"doctor-img\" src=\"assets/img/mock-doctor.png\" alt=\"doctor-img\">\r\n          <div class=\"doctor-label\">\r\n            <div>{{item.doctorname}}</div>\r\n            <div>{{item.doctorarea}}</div>\r\n            <div>Room:{{item.room}}</div>\r\n          </div>\r\n        </button>\r\n        <br>\r\n      </div>\r\n  </div>\r\n</div>\r\n","<img class=\"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  <p class=\"header\">Sign-Up</p>\r\n  <div class=\"row justify-content-md-center general-container\">\r\n    <div class=\"col-md-6 form-div \">\r\n      <form [formGroup]=\"personalform\" (ngSubmit)=\"saveForm()\" appearance=\"standard\">\r\n        <div class=\"row justify-content-md-center\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              FirstName:\r\n            </div>\r\n            <input class=\"form-input\" type=\"text\" formControlName=\"name\"/>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              LastName:\r\n            </div>\r\n            <input class=\"form-input\" type=\"text\" formControlName=\"surname\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Email:\r\n            </div>\r\n            <input class=\"form-input\" type=\"email\" formControlName=\"email\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Password:\r\n            </div>\r\n            <input class=\"form-input\" type=\"password\" formControlName=\"password\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Age:\r\n            </div>\r\n            <input class=\"form-input\" type=\"number\" min=20 max=100 formControlName=\"age\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Phonenumber:\r\n            </div>\r\n            <input class=\"form-input\" type=\"text\" formControlName=\"phonenumber\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Gender:\r\n            </div>\r\n            <select class=\"form-input\" formControlName=\"gender\">\r\n              <option class=\"form-option\" *ngFor=\"let gender of genders\" [value]=\"gender.value\">\r\n                {{gender.name}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Specialty of Doctor:\r\n            </div>\r\n            <select class=\"form-input\" formControlName=\"doctorArea\">\r\n              <option class=\"form-option\" *ngFor=\"let dp of doctorArea\" [value]=\"dp.value\">\r\n                {{dp.name}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Birth date:\r\n            </div>\r\n            <input class=\"form-input form-datepicker\" formControlName=\"birthdate\" placeholder=\"Pick a date\" [matDatepicker]=\"birthdate\">\r\n            <mat-datepicker-toggle class=\"form-datepicker-toggle\" matSuffix [for]=\"birthdate\"></mat-datepicker-toggle>\r\n            <mat-datepicker #birthdate></mat-datepicker>\r\n          </div>\r\n        </div>\r\n        <br>\r\n        <button class=\"btn sign-button\" type=\"submit\" [disabled]=\"formDisabled()\">Submit</button>\r\n      </form>\r\n      <p class=\"alert-div\" *ngIf=\"alert_flag\">\r\n        <ngb-alert>\r\n          {{alert_message}}\r\n        </ngb-alert>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\nimport { NgbAlertConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-well-come-page',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit, OnChanges {\r\n\r\n  alert_message: String = \"\";\r\n  alert_flag: Boolean = false;\r\n  submitted = false;\r\n\r\n  genders: any = [{name: 'Male', value: 0}, {name: 'Female', value: 1}];\r\n  doctorOrPatient: any = [{name: 'doctor', value: 0}, {name: 'hasta', value: 1}];\r\n\r\n  doctorArea: any = [\r\n  {name: 'Infectious Disease Physician', value: 'Infectious Disease Physician'},\r\n  {name: 'Dermatologist', value: 'Dermatologist'},\r\n  {name: 'Neurologist', value: 'Neurologist'},\r\n  {name: 'Cardiologist', value: 'Cardiologist'},\r\n  {name: 'Psychiatrist', value: 'Psychiatrist'}];\r\n\r\n  personalform = this.fb.group({\r\n    name: ['', Validators.required],\r\n    surname: ['', Validators.required],\r\n    email: ['', Validators.email],\r\n    age: ['', Validators.required],\r\n    phonenumber: ['', Validators.required],\r\n    birthdate: ['', Validators.required],\r\n    gender: ['', Validators.required],\r\n    doctorArea: ['', Validators.required],\r\n    password: ['', Validators.required]\r\n  });\r\n\r\n  private subscription = new Subscription();\r\n\r\n  onChange: any = (_: PersonalInfoForm) => {\r\n  }\r\n  onTouch: any = () => {\r\n  }\r\n\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, public dialog: MatDialog, private service: DoctorRoomService, alertConfig: NgbAlertConfig) {\r\n    alertConfig.type = 'danger';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.personalform.valueChanges.subscribe((value: PersonalInfoForm) => {\r\n        this.onChange(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges): void {\r\n    if (simpleChanges.touched && simpleChanges.touched.currentValue) {\r\n      this.personalform.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  saveForm(): void {\r\n    if (this.personalform.invalid) {\r\n      this.alert_message = \"Required fields are invalid!\"\r\n      this.show_alert()\r\n      return;\r\n    }\r\n    // TODO: save before summit to server js\r\n    /*this.service.saveFormToDataBase(this.personalform.value).subscribe(\r\n      (result: HttpResponse<any>) => this.router.navigate(['/doctororstudent']),\r\n      error => this.openDialog()\r\n    );*/\r\n\r\n    this.service.saveDoctorToSystem(this.personalform.getRawValue()).subscribe(\r\n      (result) => this.check_doctor_save_status(result),\r\n      (error) => console.log(error)\r\n    );\r\n\r\n    /*if (this.personalform.get('doctorOrPatient').value === 0) {\r\n      this.router.navigate(['/doctor']);\r\n    } else if (this.personalform.get('doctorOrPatient').value === 1) {\r\n      this.router.navigate(['/hasta']);\r\n    }*/\r\n  }\r\n\r\n  async show_alert(){\r\n    this.alert_flag = true;\r\n    await this.delay(5000);\r\n    this.alert_flag = false;\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  check_doctor_save_status(result){\r\n    if(result == \"This mail address already exists!\"){\r\n      this.alert_message = \"This mail is already in use!\"\r\n      this.show_alert()\r\n    }\r\n    else{\r\n      this.router.navigate(['/'])\r\n    }\r\n  }\r\n\r\n  openDialog(): void {\r\n    this.dialog.open(DialogElementsExampleDialogComponent);\r\n  }\r\n\r\n  formDisabled(): boolean {\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport interface PersonalInfoForm {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  age: string;\r\n  phonenumber: string;\r\n  birthdate: string;\r\n  gender: string;\r\n  doctorArea: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-for-wrong-form',\r\n  templateUrl: './dialog-for-wrong-form.html',\r\n})\r\nexport class DialogElementsExampleDialogComponent {\r\n}\r\n","<h1 mat-dialog-title>Wrong Form</h1>\r\n<div mat-dialog-content>Please reenter form</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Close</button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(private router: Router) {\r\n  }\r\n  title = 'covid19-information-and-question-system';\r\n  routeHomePage(){\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<button class=\"btn btn-success home-page-button\" (click)=\"routeHomePage()\">Home Page</button>\r\n<router-outlet></router-outlet>\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {DialogElementsExampleDialogComponent, SignUpComponent} from './sign-up-component/sign-up.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { DoctorSelectionComponent } from './doctor-selection/doctor-selection.component';\r\nimport { DoctorRegistrationComponent } from './doctor-registration/doctor-registration.component';\r\nimport {ChatRoomComponentsComponent} from './chat-room-components/chat-room-components.component';\r\nimport { SignInComponent} from './sign-in-component/sign-in.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignUpComponent,\r\n    DialogElementsExampleDialogComponent,\r\n    HomePageComponent,\r\n    DoctorSelectionComponent,\r\n    DoctorRegistrationComponent,\r\n    HomePageComponent,\r\n    ChatRoomComponentsComponent,\r\n    SignInComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatButtonToggleModule,\r\n    MatSelectModule,\r\n    MatGridListModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    MatDialogModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ChatRoomService} from '../services/chat-room.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-room-components',\r\n  templateUrl: './chat-room-components.component.html',\r\n  styleUrls: ['./chat-room-components.component.css'],\r\n  providers: [ChatRoomService]\r\n})\r\nexport class ChatRoomComponentsComponent implements OnDestroy {\r\n  connectedServer = false;\r\n  user: string;\r\n  room: string;\r\n  messageText: string;\r\n  messageArray: Array<{ username: string, text: string, createdAt: Date }> = [];\r\n  doctorEmail: string;\r\n  doctorOrNot = false;\r\n\r\n  constructor(private roomService: ChatRoomService, private route: ActivatedRoute,\r\n              private service: DoctorRoomService, private router: Router) {\r\n    this.messageText = '';\r\n    this.doctorEmail = this.route.snapshot.queryParamMap.get('email');\r\n    this.user = this.route.snapshot.queryParamMap.get('userId');\r\n    this.room = this.route.snapshot.queryParamMap.get('roomID');\r\n    console.log('DOCTOR MAIL:' + this.doctorEmail);\r\n    if (this.doctorEmail !== '-') {\r\n      console.log('DOCTOR TRUE:' + this.doctorEmail);\r\n      this.doctorOrNot = true;\r\n    }\r\n    if (!this.doctorOrNot) {\r\n      this.service.checkRoomActiveOrNot(this.room).subscribe(\r\n        (result) => {\r\n          this.checkResult(result);\r\n        },\r\n        (error) => {\r\n          console.log('ROOM: ' + this.room);\r\n          // this.router.navigate(['patient/doctor-selection']);\r\n        }\r\n      );\r\n    } else {\r\n      this.checkResult('true');\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkResult(result) {\r\n    if (result === 'true') {\r\n      this.connectedServer = true;\r\n      this.roomService.socketConnect();\r\n      /*this.roomService.forNewUserJoinToChatRoom()\r\n        .subscribe(data => this.messageArray.push(data));*/\r\n\r\n      this.roomService.doctorLeftRoom()\r\n        .subscribe(data => this.checkDoctorIsLeft(data));\r\n\r\n      this.roomService.takenNewMessageFromOtherUsers()\r\n        .subscribe(data => this.messageArray.push(data));\r\n\r\n      this.join();\r\n    } else {\r\n      this.router.navigate(['patient/doctor-selection']);\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  join() {\r\n    this.roomService.joinChatRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  leave() {\r\n    this.roomService.leaveRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n    this.gotoHome();\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  sendMessage() {\r\n    console.log(this.messageText);\r\n    if (this.messageText !== '') {\r\n      this.roomService.sendMessageToAllUsers({\r\n        username: this.user,\r\n        room: this.room,\r\n        email: this.doctorEmail,\r\n        message: this.messageText\r\n      });\r\n      this.messageText = '';\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  gotoHome() {\r\n    this.router.navigate(['home']);\r\n  }\r\n\r\n  private checkDoctorIsLeft(data: { username: string; text: string; createdAt: Date }) {\r\n    console.log(data.text);\r\n    if (data.text === 'doctor left') {\r\n      console.log(data.text);\r\n      this.connectedServer = false;\r\n      this.roomService.leaveRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log(\"1\");\r\n    this.roomService.leaveRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n  }\r\n}\r\n","<div *ngIf=\"connectedServer\">\r\n  <img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n  <div class=\"container-body\">\r\n    <p class=\"header\">Chat Room of {{this.user==\"-\" ? 'Doctor' : \"Patient (\"+this.user+\")\"}}</p>\r\n    <button type=\"button\" class=\"btn btn-md btn-outline-danger leave-button\" (click)=\"leave()\">Leave</button>\r\n    <div class=\"messages-div\">\r\n      <div *ngFor=\"let item of messageArray.reverse()\">\r\n        <span style=\"justify-content: end\"><strong>{{item.username==\"-\" ? 'Doctor' : \"Patient (\"+item.username+\")\"}} : </strong> {{item.text}}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"input-div\">\r\n    <div class=\"relative-div\">\r\n      <input type=\"text\" class=\"form-control text-input\" [(ngModel)]=\"messageText\" placeholder=\"Enter your text...\" (keydown.enter)=\"sendMessage()\">\r\n      <button type=\"button\" class=\"btn btn-success pull-right submit-btn\" (click)=\"sendMessage()\">Send</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"!connectedServer\">\r\n  <img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n  <div class=\"container-body\">\r\n    <h1  class=\"header\">{{this.user==\"-\" ? 'Patient' : \"Doctor\"}} Left the Room!</h1>\r\n    <button type=\"button\" class=\"btn btn-md btn-outline-danger leave-button\" (click)=\"gotoHome()\"> Home Page</button>\r\n  </div>\r\n</div>\r\n\r\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorRoomService {\r\n  private baseURL2 = 'https://cs447covidchatservice.herokuapp.com/api/';\r\n  private baseURL = 'http://localhost:5000/api/';\r\n  private endpoint = this.baseURL + 'doctorRoomList';\r\n  private endpointForUserID = this.baseURL + 'userIDForRandom';\r\n  private endpointForSaveDoctor = this.baseURL + 'saveDoctor';\r\n  private endpointForDoctorValidationForSignIn = this.baseURL + 'doctorValidationForSignIn';\r\n  private endpointForCheckRoomIsActive = this.baseURL + 'checkRoomIsActive';\r\n  private headers = new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  saveFormToDataBase(value: string) {\r\n    const body = JSON.stringify(value);\r\n    return this.http.post(this.endpoint, body, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getAllDoctorRooms() {\r\n    return this.http.get(this.endpoint, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getUserID() {\r\n    return this.http.get(this.endpointForUserID, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  saveDoctorToSystem(value) {\r\n    const body = JSON.stringify({data: JSON.stringify(value)});\r\n    return this.http.post(this.endpointForSaveDoctor, body, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  doctorValidationForSignIn(value) {\r\n    const body = JSON.stringify({data: JSON.stringify(value)});\r\n    return this.http.post(this.endpointForDoctorValidationForSignIn, body, {headers: this.headers});\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkRoomActiveOrNot(value) {\r\n    const body = JSON.stringify({data: value});\r\n    return this.http.post(this.endpointForCheckRoomIsActive, body, {headers: this.headers});\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {SignUpComponent} from './sign-up-component/sign-up.component';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport { DoctorSelectionComponent } from './doctor-selection/doctor-selection.component';\r\nimport { DoctorRegistrationComponent } from './doctor-registration/doctor-registration.component';\r\nimport {ChatRoomComponentsComponent} from './chat-room-components/chat-room-components.component';\r\nimport {SignInComponent} from './sign-in-component/sign-in.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'home', component: HomePageComponent},\r\n  {path: 'doctor/registration', component: DoctorRegistrationComponent},\r\n  {path: 'patient/doctor-selection', component: DoctorSelectionComponent},\r\n  {path: 'chatroom', component: ChatRoomComponentsComponent},\r\n  {path: 'doctor/registration/sign-in', component: SignInComponent},\r\n  {path: 'doctor/registration/sing-up', component: SignUpComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-doctor-registration',\r\n  templateUrl: './doctor-registration.component.html',\r\n  styleUrls: ['./doctor-registration.component.css']\r\n})\r\nexport class DoctorRegistrationComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  singIn(): void {\r\n    this.router.navigate(['doctor/registration/sign-in']);\r\n  }\r\n\r\n  singUp(): void {\r\n    this.router.navigate(['doctor/registration/sing-up']);\r\n  }\r\n}\r\n","<img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  <p class=\"header\">Doctor</p>\r\n  <div class=\"row justify-content-md-center general-container\">\r\n      <div class=\"col-md-6 sign-div \">\r\n        <button class = \"btn btn-primary sign-button\" (click)=\"singIn()\">\r\n          <img class = \"image\" src=\"assets/img/sign-in.png\" alt=\"sign-up-img\">\r\n          <div class=\"label\">\r\n            Sign in\r\n          </div>\r\n        </button>\r\n      </div>\r\n      <div class=\"col-md-6 sign-div \">\r\n        <button class = \"btn btn-primary sign-button\" (click)=\"singUp()\">\r\n          <img class = \"image\" src=\"assets/img/sign-up.png\" alt=\"sign-in-img\">\r\n          <div class=\"label\">\r\n            Sign up\r\n          </div>\r\n        </button>\r\n      </div>\r\n  </div>\r\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}