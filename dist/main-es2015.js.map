{"version":3,"sources":["./src/app/sign-in-component/sign-in.component.ts","./src/app/sign-in-component/sign-in.component.html","./src/app/services/chat-room.service.ts","./src/environments/environment.ts","./src/app/home-page/home-page.component.ts","./src/app/home-page/home-page.component.html","./src/app/doctor-selection/doctor-selection.component.ts","./src/app/doctor-selection/doctor-selection.component.html","./src/app/sign-up-component/sign-up.component.ts","./src/app/sign-up-component/sign-up.component.html","./src/app/sign-up-component/dialog-for-wrong-form.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chat-room-components/chat-room-components.component.ts","./src/app/chat-room-components/chat-room-components.component.html","./src/app/services/covid.service.ts","./src/app/app-routing.module.ts","./src/app/doctor-registration/doctor-registration.component.ts","./src/app/doctor-registration/doctor-registration.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport { NgbAlertConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport {Subscription} from 'rxjs';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sign-in-component',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit, OnChanges {\r\n  signInForm = this.fb.group({\r\n    password: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n  });\r\n\r\n  alert_flag: Boolean = false;\r\n\r\n  private subscription = new Subscription();\r\n\r\n\r\n  onChange: any = (_: SignInForm) => {\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private service: DoctorRoomService, private router: Router, alertConfig: NgbAlertConfig) {\r\n    alertConfig.type = 'danger';\r\n  }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges): void {\r\n    if (simpleChanges.touched && simpleChanges.touched.currentValue) {\r\n      this.signInForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.signInForm.valueChanges.subscribe((value: SignInForm) => {\r\n        this.onChange(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  async saveForm() {\r\n    if (this.signInForm.invalid) {\r\n      this.show_alert();\r\n      return;\r\n    }\r\n\r\n    this.service.doctorValidationForSignIn(this.signInForm.getRawValue()).subscribe(\r\n      (result) => this.checkSignInResponse(result),\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  async show_alert(){\r\n    this.alert_flag = true;\r\n    await this.delay(5000);\r\n    this.alert_flag = false;\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkSignInResponse(value) {\r\n    if (value !== 'NotFound') {\r\n      this.router.navigate(['/chatroom'], {\r\n        queryParams: {\r\n          email: this.signInForm.getRawValue().email,\r\n          userId: '-',\r\n          roomID: value\r\n        }\r\n      });\r\n    }\r\n    this.show_alert();\r\n    console.log(value);\r\n  };\r\n}\r\n\r\nexport interface SignInForm {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n}\r\n","<img class=\"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  \r\n  <p *ngIf=\"alert_flag\">\r\n    <ngb-alert>\r\n      Email or password is invalid!\r\n    </ngb-alert>\r\n  </p>\r\n\r\n\r\n  <p class=\"header\">Sign-In</p>\r\n  <div class=\"row justify-content-md-center general-container\">\r\n    <div class=\"col-md-6 form-div \">\r\n      <form [formGroup]=\"signInForm\" (ngSubmit)=\"saveForm()\" appearance=\"standard\">\r\n        <div class=\"row justify-content-md-center\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Email:\r\n            </div>\r\n            <input class=\"form-input\" type=\"email\" formControlName=\"email\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Password:\r\n            </div>\r\n            <input class=\"form-input\" type=\"password\" formControlName=\"password\"/>\r\n          </div>\r\n        </div>\r\n        <br>\r\n        <button class=\"btn sign-button\" mat-raised-button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {io} from 'socket.io-client';\r\n\r\n@Injectable()\r\nexport class ChatRoomService {\r\n  private SOCKET_ENDPOINT = 'https://cs447covidchatservice.herokuapp.com/';\r\n  private Socket_PORT_ForLOCAL = 'http://localhost:5000';\r\n  private socket; // io('http://localhost:3000/rooms');\r\n\r\n  private userID: string;\r\n  private roomId: string;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  joinChatRoom(data) {\r\n    this.socket.emit('join', data);\r\n  }\r\n\r\n  socketConnect() {\r\n    this.socket = io(this.Socket_PORT_ForLOCAL);\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  /*forNewUserJoinToChatRoom() {\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date }>(observer => {\r\n      this.socket.on('new user joined', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n\r\n    return observable;\r\n  }*/\r\n\r\n  // tslint:disable-next-line:typedef\r\n  doctorLeftRoom() {\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date }>(observer => {\r\n      this.socket.on('doctor left room', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n    return observable;\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  sendMessageToAllUsers(data) {\r\n    this.socket.emit('message', data);\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  takenNewMessageFromOtherUsers() {\r\n    // tslint:disable-next-line:ban-types\r\n    const observable = new Observable<{ username: string, text: string, createdAt: Date }>(observer => {\r\n      this.socket.on('message', (data) => {\r\n        observer.next(data);\r\n      });\r\n      return () => {\r\n        this.socket.disconnect();\r\n      };\r\n    });\r\n\r\n    return observable;\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  leaveRoom(data) {\r\n    if (this.socket) {\r\n      // this.socket.emit('leave', data);\r\n      this.socket.disconnect();\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  routeDoctor(): void {\r\n    this.router.navigate(['doctor/registration']);\r\n  }\r\n\r\n  routePatient(): void {\r\n    this.router.navigate(['patient/doctor-selection']);\r\n  }\r\n\r\n\r\n}\r\n","<img class=\"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  <div class=\"row justify-content-md-center general-container\">\r\n    <div class=\"col-md-12\">\r\n      <img class=\"banner\" src=\"assets/img/home-banner.png\">\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <button class=\"btn selection-button button-radius-left\" (click)=\"routePatient()\">Patient</button>\r\n    </div>\r\n    <div class=\"col-md-4\">\r\n      <button class=\"btn selection-button button-radius-right\" (click)=\"routeDoctor()\">Doctor</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport {ChatRoomService} from '../services/chat-room.service';\r\nimport {Router} from '@angular/router';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\n\r\n@Component({\r\n  selector: 'app-doctor-selection',\r\n  templateUrl: './doctor-selection.component.html',\r\n  styleUrls: ['./doctor-selection.component.css']\r\n})\r\nexport class DoctorSelectionComponent implements OnInit, OnDestroy {\r\n  userID: any;\r\n  allRooms: any;\r\n  audio;\r\n\r\n  constructor(private router: Router, private doctorRoomService: DoctorRoomService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.audio = new Audio('../../assets/audio/information.mp3');\r\n    this.audio.load();\r\n    this.audio.play();\r\n\r\n    this.doctorRoomService.getAllDoctorRooms().subscribe(\r\n      (result) => {\r\n        this.allRooms = result;\r\n        /*this.allRooms.forEach(doctor=> {\r\n          this.doctorRoomService.checkRoomActiveOrNot(doctor.room).subscribe(\r\n            (result) => {\r\n              if (result === 'true') {\r\n                doctor.isActive = true;\r\n              }\r\n              else{\r\n                doctor.isActive = false;\r\n              }\r\n            },\r\n            (error) => {\r\n              doctor.isActive = false;\r\n            }\r\n          );\r\n       });*/\r\n      },\r\n      (error) => this.router.navigate(['home'])\r\n    );\r\n    this.doctorRoomService.getUserID().subscribe(\r\n      (result) => this.userID = result,\r\n      (error => this.router.navigate(['home']))\r\n    );\r\n  }\r\n\r\n  gotoChatRoom(user: string, room: string): void {\r\n    this.router.navigate(['/chatroom'], {queryParams: {email: '-', userId: this.userID, roomID: room}});\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.audio.pause();\r\n  }\r\n}\r\n\r\nclass DoctorRoomType {\r\n  user: string;\r\n  room: string;\r\n}\r\n","<img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  <p class=\"header\">Doctor Selection</p>\r\n  <div class=\"row justify-content-md-center doctor-container\">\r\n      <div class=\"col-md-6 doctor-div \" *ngFor=\"let item of allRooms\">\r\n        <button class = \"btn btn-primary doctor-button\" [disabled]=\"!item.isActive\" (click)=\"gotoChatRoom(item.doctorname, item.room)\">\r\n          <img class = \"doctor-img\" src=\"assets/img/mock-doctor.png\" alt=\"doctor-img\">\r\n          <div class=\"doctor-label\">\r\n            <div>{{item.doctorname}}</div>\r\n            <div>{{item.doctorarea}}</div>\r\n            <div>Room:{{item.room}}</div>\r\n          </div>\r\n        </button>\r\n        <br>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {FormBuilder, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\nimport { NgbAlertConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-well-come-page',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit, OnChanges {\r\n\r\n  alert_message: String = \"\";\r\n  alert_flag: Boolean = false;\r\n  submitted = false;\r\n\r\n  genders: any = [{name: 'Male', value: 0}, {name: 'Female', value: 1}];\r\n  doctorOrPatient: any = [{name: 'doctor', value: 0}, {name: 'hasta', value: 1}];\r\n\r\n  doctorArea: any = [\r\n  {name: 'Infectious Disease Physician', value: 'Infectious Disease Physician'},\r\n  {name: 'Dermatologist', value: 'Dermatologist'},\r\n  {name: 'Neurologist', value: 'Neurologist'},\r\n  {name: 'Cardiologist', value: 'Cardiologist'},\r\n  {name: 'Psychiatrist', value: 'Psychiatrist'}];\r\n\r\n  personalform = this.fb.group({\r\n    name: ['', Validators.required],\r\n    surname: ['', Validators.required],\r\n    email: ['', Validators.email],\r\n    age: ['', Validators.required],\r\n    phonenumber: ['', Validators.required],\r\n    birthdate: ['', Validators.required],\r\n    gender: ['', Validators.required],\r\n    doctorArea: ['', Validators.required],\r\n    password: ['', Validators.required]\r\n  });\r\n\r\n  private subscription = new Subscription();\r\n\r\n  onChange: any = (_: PersonalInfoForm) => {\r\n  }\r\n  onTouch: any = () => {\r\n  }\r\n\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, public dialog: MatDialog, private service: DoctorRoomService, alertConfig: NgbAlertConfig) {\r\n    alertConfig.type = 'danger';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.add(\r\n      this.personalform.valueChanges.subscribe((value: PersonalInfoForm) => {\r\n        this.onChange(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnChanges(simpleChanges: SimpleChanges): void {\r\n    if (simpleChanges.touched && simpleChanges.touched.currentValue) {\r\n      this.personalform.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  saveForm(): void {\r\n    if (this.personalform.invalid) {\r\n      this.alert_message = \"Required fields are invalid!\"\r\n      this.show_alert()\r\n      return;\r\n    }\r\n    // TODO: save before summit to server js\r\n    /*this.service.saveFormToDataBase(this.personalform.value).subscribe(\r\n      (result: HttpResponse<any>) => this.router.navigate(['/doctororstudent']),\r\n      error => this.openDialog()\r\n    );*/\r\n\r\n    this.service.saveDoctorToSystem(this.personalform.getRawValue()).subscribe(\r\n      (result) => this.check_doctor_save_status(result),\r\n      (error) => console.log(error)\r\n    );\r\n\r\n    /*if (this.personalform.get('doctorOrPatient').value === 0) {\r\n      this.router.navigate(['/doctor']);\r\n    } else if (this.personalform.get('doctorOrPatient').value === 1) {\r\n      this.router.navigate(['/hasta']);\r\n    }*/\r\n  }\r\n\r\n  async show_alert(){\r\n    this.alert_flag = true;\r\n    await this.delay(5000);\r\n    this.alert_flag = false;\r\n  }\r\n\r\n  delay(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n\r\n  check_doctor_save_status(result){\r\n    if(result == \"This mail address already exists!\"){\r\n      this.alert_message = \"This mail is already in use!\"\r\n      this.show_alert()\r\n    }\r\n    else{\r\n      this.router.navigate(['/'])\r\n    }\r\n  }\r\n\r\n  openDialog(): void {\r\n    this.dialog.open(DialogElementsExampleDialogComponent);\r\n  }\r\n\r\n  formDisabled(): boolean {\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport interface PersonalInfoForm {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  age: string;\r\n  phonenumber: string;\r\n  birthdate: string;\r\n  gender: string;\r\n  doctorArea: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-for-wrong-form',\r\n  templateUrl: './dialog-for-wrong-form.html',\r\n})\r\nexport class DialogElementsExampleDialogComponent {\r\n}\r\n","<img class=\"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  <p class=\"header\">Sign-Up</p>\r\n  <div class=\"row justify-content-md-center general-container\">\r\n    <div class=\"col-md-6 form-div \">\r\n      <form [formGroup]=\"personalform\" (ngSubmit)=\"saveForm()\" appearance=\"standard\">\r\n        <div class=\"row justify-content-md-center\">\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              FirstName:\r\n            </div>\r\n            <input class=\"form-input\" type=\"text\" formControlName=\"name\"/>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              LastName:\r\n            </div>\r\n            <input class=\"form-input\" type=\"text\" formControlName=\"surname\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Email:\r\n            </div>\r\n            <input class=\"form-input\" type=\"email\" formControlName=\"email\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Password:\r\n            </div>\r\n            <input class=\"form-input\" type=\"password\" formControlName=\"password\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Age:\r\n            </div>\r\n            <input class=\"form-input\" type=\"number\" min=20 max=100 formControlName=\"age\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Phonenumber:\r\n            </div>\r\n            <input class=\"form-input\" type=\"text\" formControlName=\"phonenumber\">\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Gender:\r\n            </div>\r\n            <select class=\"form-input\" formControlName=\"gender\">\r\n              <option class=\"form-option\" *ngFor=\"let gender of genders\" [value]=\"gender.value\">\r\n                {{gender.name}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Specialty of Doctor:\r\n            </div>\r\n            <select class=\"form-input\" formControlName=\"doctorArea\">\r\n              <option class=\"form-option\" *ngFor=\"let dp of doctorArea\" [value]=\"dp.value\">\r\n                {{dp.name}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-12\">\r\n            <div class=\"label\">\r\n              Birth date:\r\n            </div>\r\n            <input class=\"form-input form-datepicker\" formControlName=\"birthdate\" placeholder=\"Pick a date\" [matDatepicker]=\"birthdate\">\r\n            <mat-datepicker-toggle class=\"form-datepicker-toggle\" matSuffix [for]=\"birthdate\"></mat-datepicker-toggle>\r\n            <mat-datepicker #birthdate></mat-datepicker>\r\n          </div>\r\n        </div>\r\n        <br>\r\n        <button class=\"btn sign-button\" type=\"submit\" [disabled]=\"formDisabled()\">Submit</button>\r\n      </form>\r\n      <p class=\"alert-div\" *ngIf=\"alert_flag\">\r\n        <ngb-alert>\r\n          {{alert_message}}\r\n        </ngb-alert>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<h1 mat-dialog-title>Wrong Form</h1>\r\n<div mat-dialog-content>Please reenter form</div>\r\n<div mat-dialog-actions>\r\n  <button mat-button mat-dialog-close>Close</button>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  constructor(private router: Router) {\r\n  }\r\n  title = 'covid19-information-and-question-system';\r\n  routeHomePage(){\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<button class=\"btn btn-success home-page-button\" (click)=\"routeHomePage()\">Home Page</button>\r\n<router-outlet></router-outlet>\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {DialogElementsExampleDialogComponent, SignUpComponent} from './sign-up-component/sign-up.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatNativeDateModule} from '@angular/material/core';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { HomePageComponent } from './home-page/home-page.component';\r\nimport { DoctorSelectionComponent } from './doctor-selection/doctor-selection.component';\r\nimport { DoctorRegistrationComponent } from './doctor-registration/doctor-registration.component';\r\nimport {ChatRoomComponentsComponent} from './chat-room-components/chat-room-components.component';\r\nimport { SignInComponent} from './sign-in-component/sign-in.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignUpComponent,\r\n    DialogElementsExampleDialogComponent,\r\n    HomePageComponent,\r\n    DoctorSelectionComponent,\r\n    DoctorRegistrationComponent,\r\n    HomePageComponent,\r\n    ChatRoomComponentsComponent,\r\n    SignInComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatButtonToggleModule,\r\n    MatSelectModule,\r\n    MatGridListModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    NgbModule,\r\n    MatDialogModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ChatRoomService} from '../services/chat-room.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {DoctorRoomService} from '../services/covid.service';\r\n\r\n@Component({\r\n  selector: 'app-chat-room-components',\r\n  templateUrl: './chat-room-components.component.html',\r\n  styleUrls: ['./chat-room-components.component.css'],\r\n  providers: [ChatRoomService]\r\n})\r\nexport class ChatRoomComponentsComponent implements OnDestroy {\r\n  connectedServer = false;\r\n  user: string;\r\n  room: string;\r\n  messageText: string;\r\n  messageArray: Array<{ username: string, text: string, createdAt: Date }> = [];\r\n  doctorEmail: string;\r\n  doctorOrNot = false;\r\n\r\n  constructor(private roomService: ChatRoomService, private route: ActivatedRoute,\r\n              private service: DoctorRoomService, private router: Router) {\r\n    this.messageText = '';\r\n    this.doctorEmail = this.route.snapshot.queryParamMap.get('email');\r\n    this.user = this.route.snapshot.queryParamMap.get('userId');\r\n    this.room = this.route.snapshot.queryParamMap.get('roomID');\r\n    console.log('DOCTOR MAIL:' + this.doctorEmail);\r\n    if (this.doctorEmail !== '-') {\r\n      console.log('DOCTOR TRUE:' + this.doctorEmail);\r\n      this.doctorOrNot = true;\r\n    }\r\n    if (!this.doctorOrNot) {\r\n      this.service.checkRoomActiveOrNot(this.room).subscribe(\r\n        (result) => {\r\n          this.checkResult(result);\r\n        },\r\n        (error) => {\r\n          console.log('ROOM: ' + this.room);\r\n          // this.router.navigate(['patient/doctor-selection']);\r\n        }\r\n      );\r\n    } else {\r\n      this.checkResult('true');\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkResult(result) {\r\n    if (result === 'true') {\r\n      this.connectedServer = true;\r\n      this.roomService.socketConnect();\r\n      /*this.roomService.forNewUserJoinToChatRoom()\r\n        .subscribe(data => this.messageArray.push(data));*/\r\n\r\n      this.roomService.doctorLeftRoom()\r\n        .subscribe(data => this.checkDoctorIsLeft(data));\r\n\r\n      this.roomService.takenNewMessageFromOtherUsers()\r\n        .subscribe(data => this.messageArray.push(data));\r\n\r\n      this.join();\r\n    } else {\r\n      this.router.navigate(['patient/doctor-selection']);\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  join() {\r\n    this.roomService.joinChatRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  leave() {\r\n    this.roomService.leaveRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n    this.gotoHome();\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  sendMessage() {\r\n    console.log(this.messageText);\r\n    if (this.messageText !== '') {\r\n      this.roomService.sendMessageToAllUsers({\r\n        username: this.user,\r\n        room: this.room,\r\n        email: this.doctorEmail,\r\n        message: this.messageText\r\n      });\r\n      this.messageText = '';\r\n    }\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  gotoHome() {\r\n    this.router.navigate(['home']);\r\n  }\r\n\r\n  private checkDoctorIsLeft(data: { username: string; text: string; createdAt: Date }) {\r\n    console.log(data.text);\r\n    if (data.text === 'doctor left') {\r\n      console.log(data.text);\r\n      this.connectedServer = false;\r\n      this.roomService.leaveRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    console.log(\"1\");\r\n    this.roomService.leaveRoom({username: this.user, room: this.room, email: this.doctorEmail});\r\n  }\r\n}\r\n","<div *ngIf=\"connectedServer\">\r\n  <img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n  <div class=\"container-body\">\r\n    <p class=\"header\">Chat Room of {{this.user==\"-\" ? 'Doctor' : \"Patient (\"+this.user+\")\"}}</p>\r\n    <button type=\"button\" class=\"btn btn-md btn-outline-danger leave-button\" (click)=\"leave()\">Leave</button>\r\n    <div class=\"messages-div\">\r\n      <div *ngFor=\"let item of messageArray.reverse()\">\r\n        <span style=\"justify-content: end\"><strong>{{item.username==\"-\" ? 'Doctor' : \"Patient (\"+item.username+\")\"}} : </strong> {{item.text}}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"input-div\">\r\n    <div class=\"relative-div\">\r\n      <input type=\"text\" class=\"form-control text-input\" [(ngModel)]=\"messageText\" placeholder=\"Enter your text...\" (keydown.enter)=\"sendMessage()\">\r\n      <button type=\"button\" class=\"btn btn-success pull-right submit-btn\" (click)=\"sendMessage()\">Send</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"!connectedServer\">\r\n  <img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n  <div class=\"container-body\">\r\n    <h1  class=\"header\">{{this.user==\"-\" ? 'Patient' : \"Doctor\"}} Left the Room!</h1>\r\n    <button type=\"button\" class=\"btn btn-md btn-outline-danger leave-button\" (click)=\"gotoHome()\"> Home Page</button>\r\n  </div>\r\n</div>\r\n\r\n","import {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorRoomService {\r\n  private baseURL2 = 'https://cs447covidchatservice.herokuapp.com/api/';\r\n  private baseURL = 'http://localhost:5000/api/';\r\n  private endpoint = this.baseURL + 'doctorRoomList';\r\n  private endpointForUserID = this.baseURL + 'userIDForRandom';\r\n  private endpointForSaveDoctor = this.baseURL + 'saveDoctor';\r\n  private endpointForDoctorValidationForSignIn = this.baseURL + 'doctorValidationForSignIn';\r\n  private endpointForCheckRoomIsActive = this.baseURL + 'checkRoomIsActive';\r\n  private headers = new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  });\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  saveFormToDataBase(value: string) {\r\n    const body = JSON.stringify(value);\r\n    return this.http.post(this.endpoint, body, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getAllDoctorRooms() {\r\n    return this.http.get(this.endpoint, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getUserID() {\r\n    return this.http.get(this.endpointForUserID, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  saveDoctorToSystem(value) {\r\n    const body = JSON.stringify({data: JSON.stringify(value)});\r\n    return this.http.post(this.endpointForSaveDoctor, body, {headers: this.headers});\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  doctorValidationForSignIn(value) {\r\n    const body = JSON.stringify({data: JSON.stringify(value)});\r\n    return this.http.post(this.endpointForDoctorValidationForSignIn, body, {headers: this.headers});\r\n\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  checkRoomActiveOrNot(value) {\r\n    const body = JSON.stringify({data: value});\r\n    return this.http.post(this.endpointForCheckRoomIsActive, body, {headers: this.headers});\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {SignUpComponent} from './sign-up-component/sign-up.component';\r\nimport {HomePageComponent} from './home-page/home-page.component';\r\nimport { DoctorSelectionComponent } from './doctor-selection/doctor-selection.component';\r\nimport { DoctorRegistrationComponent } from './doctor-registration/doctor-registration.component';\r\nimport {ChatRoomComponentsComponent} from './chat-room-components/chat-room-components.component';\r\nimport {SignInComponent} from './sign-in-component/sign-in.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'home', component: HomePageComponent},\r\n  {path: 'doctor/registration', component: DoctorRegistrationComponent},\r\n  {path: 'patient/doctor-selection', component: DoctorSelectionComponent},\r\n  {path: 'chatroom', component: ChatRoomComponentsComponent},\r\n  {path: 'doctor/registration/sign-in', component: SignInComponent},\r\n  {path: 'doctor/registration/sing-up', component: SignUpComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-doctor-registration',\r\n  templateUrl: './doctor-registration.component.html',\r\n  styleUrls: ['./doctor-registration.component.css']\r\n})\r\nexport class DoctorRegistrationComponent implements OnInit {\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  singIn(): void {\r\n    this.router.navigate(['doctor/registration/sign-in']);\r\n  }\r\n\r\n  singUp(): void {\r\n    this.router.navigate(['doctor/registration/sing-up']);\r\n  }\r\n}\r\n","<img class = \"background-img\" src=\"assets/img/home-bg.png\">\r\n<div class=\"container-body\">\r\n  <p class=\"header\">Doctor</p>\r\n  <div class=\"row justify-content-md-center general-container\">\r\n      <div class=\"col-md-6 sign-div \">\r\n        <button class = \"btn btn-primary sign-button\" (click)=\"singIn()\">\r\n          <img class = \"image\" src=\"assets/img/sign-in.png\" alt=\"sign-up-img\">\r\n          <div class=\"label\">\r\n            Sign in\r\n          </div>\r\n        </button>\r\n      </div>\r\n      <div class=\"col-md-6 sign-div \">\r\n        <button class = \"btn btn-primary sign-button\" (click)=\"singUp()\">\r\n          <img class = \"image\" src=\"assets/img/sign-up.png\" alt=\"sign-in-img\">\r\n          <div class=\"label\">\r\n            Sign up\r\n          </div>\r\n        </button>\r\n      </div>\r\n  </div>\r\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}